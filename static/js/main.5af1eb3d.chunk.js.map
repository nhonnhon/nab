{"version":3,"sources":["../node_modules/moment/lang sync /^/.//.*$","services/api.js","actions/all.js","components/Loading/Loading.js","pages/Home.js","App.js","serviceWorker.js","reducers/all.js","reducers/index.js","configs/store.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","api","axios","create","baseURL","headers","Accept","timeout","customFetch","url","method","body","customOptions","Promise","reject","optionDetect","params","data","options","request","then","response","result","status","error","catch","alert","post","get","put","_delete","patch","APIKEY","loadingDataCity","isLoading","type","payload","Loading","props","text","extraText","className","defaultProps","dayList","connect","all","user","defaultCity","toJS","dataCurrentCity","listCities","searchCities","cityName","successCB","dispatch","Api","updateListCites","getResultCity","updateDataCurrentCity","useState","searchString","setSearchString","forecastday","_","useEffect","delayedSearch","useRef","debounce","current","Container","items","item","label","name","region","getItemValue","renderItem","highlighted","key","value","onChange","target","onSelect","length","Row","Col","md","xs","date","Card","Body","Title","moment","day","App","Boolean","window","location","hostname","match","initialState","fromJS","rootReducer","combineReducers","router","routerReducer","state","set","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5af1eb3d.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 31,\n\t\"./ar-ma\": 32,\n\t\"./ar-ma.js\": 32,\n\t\"./ar.js\": 31,\n\t\"./bg\": 33,\n\t\"./bg.js\": 33,\n\t\"./br\": 34,\n\t\"./br.js\": 34,\n\t\"./ca\": 35,\n\t\"./ca.js\": 35,\n\t\"./cs\": 36,\n\t\"./cs.js\": 36,\n\t\"./cv\": 37,\n\t\"./cv.js\": 37,\n\t\"./da\": 38,\n\t\"./da.js\": 38,\n\t\"./de\": 39,\n\t\"./de.js\": 39,\n\t\"./el\": 40,\n\t\"./el.js\": 40,\n\t\"./en-ca\": 41,\n\t\"./en-ca.js\": 41,\n\t\"./en-gb\": 42,\n\t\"./en-gb.js\": 42,\n\t\"./eo\": 43,\n\t\"./eo.js\": 43,\n\t\"./es\": 44,\n\t\"./es.js\": 44,\n\t\"./et\": 45,\n\t\"./et.js\": 45,\n\t\"./eu\": 46,\n\t\"./eu.js\": 46,\n\t\"./fa\": 47,\n\t\"./fa.js\": 47,\n\t\"./fi\": 48,\n\t\"./fi.js\": 48,\n\t\"./fr\": 49,\n\t\"./fr-ca\": 50,\n\t\"./fr-ca.js\": 50,\n\t\"./fr.js\": 49,\n\t\"./gl\": 51,\n\t\"./gl.js\": 51,\n\t\"./he\": 52,\n\t\"./he.js\": 52,\n\t\"./hi\": 53,\n\t\"./hi.js\": 53,\n\t\"./hr\": 54,\n\t\"./hr.js\": 54,\n\t\"./hu\": 55,\n\t\"./hu.js\": 55,\n\t\"./id\": 56,\n\t\"./id.js\": 56,\n\t\"./is\": 57,\n\t\"./is.js\": 57,\n\t\"./it\": 58,\n\t\"./it.js\": 58,\n\t\"./ja\": 59,\n\t\"./ja.js\": 59,\n\t\"./ka\": 60,\n\t\"./ka.js\": 60,\n\t\"./ko\": 61,\n\t\"./ko.js\": 61,\n\t\"./lv\": 62,\n\t\"./lv.js\": 62,\n\t\"./ml\": 63,\n\t\"./ml.js\": 63,\n\t\"./mr\": 64,\n\t\"./mr.js\": 64,\n\t\"./ms-my\": 65,\n\t\"./ms-my.js\": 65,\n\t\"./nb\": 66,\n\t\"./nb.js\": 66,\n\t\"./ne\": 67,\n\t\"./ne.js\": 67,\n\t\"./nl\": 68,\n\t\"./nl.js\": 68,\n\t\"./nn\": 69,\n\t\"./nn.js\": 69,\n\t\"./pl\": 70,\n\t\"./pl.js\": 70,\n\t\"./pt\": 71,\n\t\"./pt-br\": 72,\n\t\"./pt-br.js\": 72,\n\t\"./pt.js\": 71,\n\t\"./ro\": 73,\n\t\"./ro.js\": 73,\n\t\"./ru\": 74,\n\t\"./ru.js\": 74,\n\t\"./sk\": 75,\n\t\"./sk.js\": 75,\n\t\"./sl\": 76,\n\t\"./sl.js\": 76,\n\t\"./sq\": 77,\n\t\"./sq.js\": 77,\n\t\"./sv\": 78,\n\t\"./sv.js\": 78,\n\t\"./th\": 79,\n\t\"./th.js\": 79,\n\t\"./tr\": 80,\n\t\"./tr.js\": 80,\n\t\"./tzm\": 81,\n\t\"./tzm-la\": 82,\n\t\"./tzm-la.js\": 82,\n\t\"./tzm.js\": 81,\n\t\"./uk\": 83,\n\t\"./uk.js\": 83,\n\t\"./zh-cn\": 84,\n\t\"./zh-cn.js\": 84,\n\t\"./zh-tw\": 85,\n\t\"./zh-tw.js\": 85\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 122;","import axios from 'axios'\n\nconst BASE_URL = \"http://api.weatherapi.com/v1/\"\n\nlet headersDefault = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n}\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: headersDefault,\n  timeout: 120000,\n})\n\nfunction customFetch(url, method, body = {}, customOptions = {}) {\n  return new Promise((resolve, reject) => {\n    let optionDetect = {}\n    if (method === 'GET' || method === 'PATCH') {\n      optionDetect = {\n        params: {\n          ...body,\n        },\n      }\n    }\n    if (method === 'POST' || method === 'PUT') {\n      optionDetect = {\n        data: {\n          ...body,\n        },\n      }\n    }\n    const options = {\n      method,\n      url,\n      ...optionDetect,\n      ...customOptions,\n    }\n\n    api\n      .request(options)\n      .then((response) => {\n        const result = response.data\n        const status = response.status\n\n        if (status === 200 || status === 201) {\n          resolve({ data: result })\n        } else {\n          reject({ error: result })\n        }\n      })\n      .catch((error) => {\n        alert('Something went wrong')\n        reject({ error: error })\n      })\n  })\n}\n\nfunction post(url, body, options) {\n  return customFetch(url, 'POST', body, options)\n}\n\nfunction get(url, body, options) {\n  return customFetch(url, 'GET', body, options)\n}\n\nfunction put(url, body, options) {\n  return customFetch(url, 'PUT', body, options)\n}\n\nfunction patch(url, body, options) {\n  return customFetch(url, 'PATCH', body, options)\n}\n\nfunction _delete(url, body, options) {\n  return customFetch(url, 'DELETE', body, options)\n}\n\nexport default {\n  post,\n  get,\n  put,\n  _delete,\n  patch,\n}\n","import { Api } from '../services'\n\nconst APIKEY = '208ff99bc83a45dbab574958200509'\nconst search = 'search.json'\nconst forecast = 'forecast.json'\nconst days = 5\n\nexport const LIST_CITIES = 'LIST_CITIES'\nexport const DATA_CURRENT_CITY = 'DATA_CURRENT_CITY'\nexport const LOADING_DATA_CITY = 'LOADING_DATA_CITY'\n\nconst updateListCites = (data) => {\n  return ({\n    type: LIST_CITIES,\n    payload: data\n  })\n}\n\nconst updateDataCurrentCity = (data) => {\n  return ({\n    type: DATA_CURRENT_CITY,\n    payload: data\n  })\n}\n\nconst loadingDataCity = (isLoading) => {\n  return ({\n    type: LOADING_DATA_CITY,\n    payload: isLoading\n  })\n}\n\nfunction searchCities(cityName, successCB) {\n  return (dispatch) => {\n    Api.get(`${search}?key=${APIKEY}&q=${cityName}`)\n      .then(({ data }) => {\n        dispatch(updateListCites(data))\n      })\n      .catch(() => {})\n  }\n}\n\nfunction getResultCity(cityName) {\n  return (dispatch) => {\n    dispatch(loadingDataCity(true))\n    Api.get(`${forecast}?key=${APIKEY}&q=${cityName}&days=${days}`)\n      .then(({ data }) => {\n        dispatch(loadingDataCity(false))\n        dispatch(updateDataCurrentCity(data))\n      })\n      .catch(() => {\n        dispatch(loadingDataCity(false))\n      })\n  }\n}\n\nexport {\n  searchCities,\n  getResultCity\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Loading.scss'\n\nconst Loading = props => {\n  const { text, extraText } = props\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading\" />\n      <span id=\"loading-text\">{text}</span>\n      <div className=\"loading-container__extraText \">\n        <p className=\"loading-container__extraText__text text white\">{extraText}</p>\n      </div>\n    </div>\n  )\n}\n\nLoading.propTypes = {\n  text: PropTypes.string,\n}\n\nLoading.defaultProps = {\n  text: 'loading',\n}\n\nexport default Loading\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux'\nimport { searchCities, getResultCity } from '../actions/all'\nimport _ from 'lodash'\nimport moment from \"moment\"\nimport PropTypes from 'prop-types';\n\nimport {Container, Row, Col, Card} from 'react-bootstrap'\nimport Autocomplete from 'react-autocomplete'\nimport { Loading } from '../components'\n\nimport './style.scss'\n\nconst dayList = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\nconst Home = (props) => {\n  const { \n    defaultCity, \n    searchCities, \n    listCities, \n    getResultCity, \n    dataCurrentCity, \n    loadingDataCity\n  } = props\n\n  const [searchString, setSearchString] = useState('')\n  const forecastday = _.get(dataCurrentCity, 'forecast.forecastday') \n\n  useEffect(() => {\n    getResultCity(defaultCity)\n  }, [])\n\n  const delayedSearch = useRef(_.debounce(text => searchCities(text || 'a'), 500)).current;\n\n  const onChangeInputSearch = (e) => {\n    const text = e.target.value\n    setSearchString(text)\n    delayedSearch(text);\n  }\n\n  const onSelectCity = (value, item) => {\n    setSearchString(item.label)\n    getResultCity(item.label)\n  }\n  \n  return (\n    <Container>\n      <h1 className=\"text-center\">Welcome</h1>\n      <div className=\"input-search\">\n        <label>Search</label>\n        <Autocomplete\n          items={\n            _.map(listCities, item => ({\n              id: item.id,\n              label: item.name,\n              region: item.region\n            }))\n          }\n          getItemValue={item => item.label}\n          renderItem={(item, highlighted) =>\n            <div\n              key={item.id}\n              className=\"item-search\"\n            >\n              {item.label}\n            </div>\n          }\n          value={searchString}\n          onChange={onChangeInputSearch}\n          onSelect={onSelectCity}\n        />\n      </div>\n      \n      <div className=\"forecast\">\n        {loadingDataCity ?\n          <Loading text=\"Loading ...\" />\n          : (\n            <>\n            <h3 className=\"pad-bot-10\">{`Name: ${_.get(dataCurrentCity, 'location.name') || ''}`}</h3>\n            <h3 className=\"pad-bot-10\">{`Region: ${_.get(dataCurrentCity, 'location.region') || ''}`}</h3>\n            {forecastday && forecastday.length > 0 ?\n              <Row>\n                {_.map(forecastday, item => (\n                  <Col md={4} xs={6} key={item.date}>\n                    <Card>\n                      <Card.Body className=\"text-center\">\n                        <Card.Title className=\"pad-bot-20\">{dayList[moment(item.date).day()]}</Card.Title>\n                        <Card.Title>{`Max: ${_.get(item, 'day.maxtemp_c') || 'No data'}`}</Card.Title>\n                        <Card.Title>{`Min: ${_.get(item, 'day.mintemp_c') || 'No data'}`}</Card.Title>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            : (\n              <h4>No data</h4>\n            )}\n            </>\n          )}\n      </div>\n    </Container>\n  )\n}\n\nHome.propTypes = {\n  defaultCity: PropTypes.string, \n  searchCities: PropTypes.func,\n  listCities: PropTypes.array,\n  getResultCity: PropTypes.func,\n  dataCurrentCity: PropTypes.object,\n  loadingDataCity: PropTypes.bool\n};\n\nconst mapStateToProps = ({ all, user }) => {\n  return {\n    defaultCity: all.toJS().defaultCity,\n    dataCurrentCity: all.toJS().dataCurrentCity,\n    listCities: all.toJS().listCities,\n    loadingDataCity: all.toJS().loadingDataCity,\n  }\n}\n\nexport default connect(mapStateToProps, \n  {\n    searchCities,\n    getResultCity\n  }\n)(Home)\n","import React from 'react';\nimport Home from './pages/Home'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { fromJS } from 'immutable'\nimport { LIST_CITIES, DATA_CURRENT_CITY, LOADING_DATA_CITY } from '../actions/all'\n\nconst initialState = fromJS({\n  defaultCity: \"new york\",\n  listCities: [],\n  dataCurrentCity: {},\n  loadingDataCity: false\n})\n\nexport default function all(state = initialState, { type, payload }) {\n  switch (type) {\n    case LIST_CITIES:\n      return state.set('listCities', fromJS(payload))\n    \n    case DATA_CURRENT_CITY:\n      return state.set('dataCurrentCity', fromJS(payload))\n    \n    case LOADING_DATA_CITY:\n      return state.set('loadingDataCity', fromJS(payload))\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\n\nimport all from './all'\n\nconst rootReducer = combineReducers({ router: routerReducer, all })\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './../reducers'\nimport thunk from 'redux-thunk'\n\nconst configStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk))\n  )\n\n  return store\n}\n\nconst store = configStore()\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport store from './configs/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}